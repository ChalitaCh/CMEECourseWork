Starting code feedback for Chalita, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.64 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, Week1, Feedback, Week2

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
#The files with following extension will not be push into the git repository

*~ 
*.tmp

#MAC weird system file
.DS_Store

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# My CMEE Coursework Repository 2021-2022

This repository contains the coursework for my MSc CMEE at Imperial College London.

## Author

[Chalita Chomkatekaew](https://orcid.org/0000-0003-2543-1045/) 

## Week 1

Introduction to the UNIX and Linux, shell scripting and LaTeX. Code folder contains the shell utility scripts, where the data contains the example data files.

## Week2

Introduction to the basic Python syntax and data structure. How to write and run Python script, together with the control flow tools and debugging the Python script.
 




**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, sandbox, results, data

Found the following files: .DS_Store, README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Week1 CMEE Coursework 

CMEE Bootcamp Week 1 (04 Oct 2021 - 08 Oct 2021)
The topics covered in this week including:

- UNIX and Linux
- Shell scripting
- Version control with Git
- Scientific documents with *Latex*

All the scripts used Mac OS Big Sur version 11.6. A comprehensive list of all files and scripts within the Week 1 directory is provided below.

## Code

- ComplieLaTeX.sh - A shell script to complie LaTeX file, and to remove the rubbish files.
- ConcatenateTwoFiles.sh - A shell script to merge two files together.
- CountLines.sh - A shell script to count the lines of a file.
- FirstBiblio.bib - An example of a .bib file for reference for LaTex.
- FirstExample.tex - An example of the Latex script.
- MyExampleScript.sh - An example of a shell script.
- UnixPrac1.txt - contains 5 commands for a fasta practical.
- boilerplate.sh - A template for a shell script file.
- csvtospace.sh - A shell script to convert the csv file to a space separated file.
- tabtocsv.sh - A shell script to convert a tab delimited file to a csv file.
- tiff2png.sh - A shell scrip to convert a tiff image file to a png file. > Require ImageMagick software
- variables.sh - An example of variables assignment in a shell script.

## Data

- fasta - A directory containing example fasta files.
- Temperatures - A directory containing example csv files and the converted version in txt file using csvtospace.sh in a code directory.
- spawannxs.txt - A list of UN protected species used in a grep command practical.
- universal_install_script.tif - An example of tif file for a shell script tiff2png.sh.

## Results

An empty directory for the output files

## Sandbox

- TestFind - A directory containing empty files used in a find command practical.
- TestWild - A directory containing empty files used in a wildcard practical
- ListRootDir.txt - A text file of a root directory
- test.txt and test.txt.csv - Example files of input and an output of used with a tabtocsv.sh script.


 

**********************************************************************

Found following files in results directory: universal_install_script.png...

Ideally, Results directory should be empty other than, perhaps a .gitkeep. 

 0.5 pts deducted per results file 

Current Points = 99.5

Found 12 code files: tiff2png.sh, CountLines.sh, FirstBiblio.bib, tabtocsv.sh, variables.sh, FirstExample.tex, boilerplate.sh, csvtospace.sh, ConcatenateTwoFiles.sh, UnixPrac1.txt, CompileLaTeX.sh, MyExampleScript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash

for f in ../data/*.tif;
	do
		echo "converting $f";
		convert "$f" "../results/$(basename "$f" .tif).png";
	done

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
converting ../data/universal_install_script.tif

**********************************************************************

Code ran without errors

Time consumed = 0.03725s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash

# < will just catch the numerical output
NumLines=$(wc -l < $1)
echo "The file $1 has $NumLines lines"
echo

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The file  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 4: $1: ambiguous redirect

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Chalita Chomkatekaew cc2320@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2021

echo "Creating a comma delimited version of $1 ..."
if [ $# -eq 0 ]
then
	echo "Please supply a tab delimited file as an input"
else
	cat $1 | tr -s "\t" ","  >> ${1%.*}.csv
	echo "Done!"
	exit
fi

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Creating a comma delimited version of  ...
Please supply a tab delimited file as an input

**********************************************************************

Code ran without errors

Time consumed = 0.00265s

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash

## Illustrates the use of variables

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration
MY_VAR='some string'
echo 'the current value of the variable is:' $MY_VAR
echo
echo 'Pleas enter a new string'
read MY_VAR
echo
echo 'the current value of the variable is:' $MY_VAR
echo

## Assigned Variables; Reading (mulitple values) from user input:
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
MY_SUM=$(expr $a + $b)
echo $MY_SUM

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string

Pleas enter a new string

the current value of the variable is:

Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error: missing argument after ‘+’

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Chalita Chomkatekaew}

\date{7$^{th}$ October 2021}

\begin{document}
\maketitle
	\begin{abstract}
	This paper analyses a seminal equation in population biology.
	\end{abstract}

	\section{Introduction}
	Blah Blah

	\section{Materials \& Methods}

	A foundational equation of population biology is:

	\begin{equation}
	\frac{dN}{dt} = r N (1 - \frac{N}{K})
	\end{equation}

	It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.

	\bibliographystyle{plain}

	\bibliography{FirstBiblio}

\end{document}



**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Chalita Chomkatekaew chalita.chomkatekaew20@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2021

# -e enable interpretation of backslash
# \n enable the new line

echo -e "\nThis is a shell script! \n"

#exit

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00270s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Chalita Chomkatekaew chalita.chomkatekaew20@imperial.ac.uk
# Script: csvtospace.sh
# Description: substitute the commas in the file with space
# Saves the output into the text file with space separated values
# Arguments: 1 -> commas separated file
# Date: 6 Oct 2021

echo "Creating a space separeted text file of $1 ....."
if [ $# -eq 0 ]
then
	echo "Please supply a .csv file as an input"
else
	cat $1 | tr "," " " >> ${1%.*}.txt
	echo "Done"
	exit
fi 

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Creating a space separeted text file of  .....
Please supply a .csv file as an input

**********************************************************************

Code ran without errors

Time consumed = 0.00370s

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Chalita Chomkatekaew chalita.chomkatekaew20@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Description: Merge two files together
# Saves the output into a specified file name -> 3
# Arguments: 1 and 2 -> any files
# Date : 11 Oct 2021

echo "Merging $1 and $2 to $3...."
if [[ $# < 3 ]]
then
	echo "This script requires 3 input arguments, please supply the input files"
else
 	cat $1 > $3
	cat $2 >> $3
	echo "Merged File is"
	cat $3
	exit 1
fi

**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Merging  and  to ....
This script requires 3 input arguments, please supply the input files

**********************************************************************

Code ran without errors

Time consumed = 0.00331s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#UNIX and Linux practical week1
# Author: Chalita Chomkatekaew chalita.chomkatekaew20@imperial.ac.uk
# Date: 6 Oct 2021

#To count how many lines are there in each fasta file

wc -l ../data/fasta/*.fasta

#To print everything from 2nd lines onwards for E.coli genome

tail -n +2 ../data/fasta/E.coli.fasta

#To count the sequence length of E.coli genome
#remove the first line containing '>' first and pipe 'wc' command to count the actual sequence


tail -n +2 ../data/fasta/E.coli.fasta | wc -m

#To count the pattern 'ATGC' in the E.coli genome
#remove the first line then pipe the tr command to remove the new line characters before finding the pattern using grep with option to print the matched pattern in a unique line and count

tail -n +2 ../data/fasta/E.coli.fasta| tr -d '\n' | grep -o "ATGC" | wc -l

#To compute the AT/GC ratio
#Use bc command because it could display an output in decimal

echo "scale=3;" | bc <<< "$(grep -o "A\|T" ../data/fasta/E.coli.fasta | wc -l) / $(grep -o "C\|G" ../data/fasta/E.coli.fasta | wc -l)"

#exit

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash

pdflatex $1
bibtex ${1/.*/}
pdflatex $1
pdflatex $1
evince ${1/.*/}.pdf &


## Cleanup

rm *.aux
rm *.log
rm *.bbl
rm *.blg

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
**
! End of file on the terminal... why?
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
**
! End of file on the terminal... why?
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
**
! End of file on the terminal...
**********************************************************************

Encountered error (or warning):
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory

** (evince:95688): WARNING **: 14:02:44.688: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2021-22/Coursework/StudentRepos/ChalitaChomkatekaew_cc2320/Week1/code/.pdf”: No such file or directory

** (evince:95688): WARNING **: 14:02:44.689: set_filenames: Error when getting information for file “/home/mhasoba/Documents/Teaching/IC_CMEE/2021-22/Coursework/StudentRepos/ChalitaChomkatekaew_cc2320/Week1/code/.pdf”: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.704: Error setting file metadata: No such file or directory

** (evince:95688): WARNING **: 14:02:44.708: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00773s

======================================================================
======================================================================
Finished running scripts

Ran into 3 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!